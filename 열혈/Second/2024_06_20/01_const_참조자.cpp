/*
날짜 : 2024. 6. 20
이름 : 배성훈
내용 : 참조자를 이용한 Call by reference의 황당함과 const 참조자
	교재 p81 ~ 82

	포인터는 잘못 사용할 확률이 높고,
	참조자의 활용이 상대적으로 포인터의 활용보다 쉽기 때문에,
	참조자 기반의 함수가 더 좋은 선택이라 생각할 수 있다
	그러나 참조자 기반의 함수정의에 좋은 점만 있는 것은 아니다

	단점으로 코드 분석에 있다
	C에서는 Call by value는 주소를 보내지 않기에 바로 값이 변경이 없구나 파악할 수 있다
	C++에서는 함수의 정의가 어떻게 되어 있는지 확인해야한다
	이를 해결하는 방법으로 const 키워드를 이용해 값이 변하지 않음을 명시할 수 있다

		void Func(const int& ref);
	와 같이 선언하면
	Func 함수 내에서 참조자 ref를 이용한 값의 변경은 허용하지 않는다는 의미다

	그래서 함수 내에서, 참조자를 통한 값의 변경이 진행하지 않을 경우,
	참조자를 const로 선언해서, 함수의 원형만 봐도 값의 변경이 이뤄지지 않음을 알 수 있게 하면
	좋은 코드가 도니다

	매우 사소한거 같지만 매우 중요한 원치고가 습관이다
	최소한 값의 변경유무를 확인하기 위해서 함수의 몸체를 들여다 보는
	일은 발생하지 않기 때문이다

	일부 프로그래머는 포인터를 사용하는 것이 코드를 더 명확히
	작성하는 방법이 된다고 생각하기 때문에 참조자가 아닌 포인터를 쓰는 경우도 있다
*/