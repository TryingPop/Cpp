/*
날짜 : 2023. 1. 25
이름 : 배성훈
내용 : Struct
	Racing Car를 표현

	ShowCarState, Accel, Break 모두 Car에 종속된 함수이지만
	전역 함수로 선언되어서 종속성이 얕아 보일 수 있다.
*/

#include <iostream>
using namespace std;

#define ID_LEN		20
#define MAX_SPD		200
#define	FUEL_STEP	2
#define ACC_STEP	10
#define BRK_STEP	10

struct Car {

	char gamerID[ID_LEN];	// 소유자 ID
	int fuelGauge;			// 연료량
	int curSpeed;			// 현재 속도
};

// 단순 참조만 하기에 const 참조자로 선언
void ShowCarState(const Car& car) {

	cout << "소유자ID : " << car.gamerID << endl;
	cout << "연료량 : " << car.fuelGauge << "%" << endl;
	cout << "현재속도 : " << car.curSpeed << "km/s" << endl << endl;
}

void Accel(Car& car) {

	if (car.fuelGauge <= 0) {

		return;
	}
	else {

		car.fuelGauge -= FUEL_STEP;
	}

	if (car.curSpeed + ACC_STEP >= MAX_SPD) {

		car.curSpeed = MAX_SPD;
		return;
	}

	car.curSpeed += ACC_STEP;
}

void Break(Car& car) {

	if (car.curSpeed < BRK_STEP) {

		car.curSpeed = 0;
		return;
	}

	car.curSpeed -= BRK_STEP;
}

int main(void)
{

	// C에서는 struct를 typedef 없이 정의하면 struct Car로 struct를 앞에 넣어줘야한다
	// 하지만 C++ 는 typedef 없이도 Car로 선언 가능하다
	Car run99 = { "run99", 100, 0 };
	Accel(run99);
	Accel(run99);
	ShowCarState(run99);
	Break(run99);
	ShowCarState(run99);

	Car sped77 = { "sped77", 100, 0 };
	Accel(sped77);
	Break(sped77);
	ShowCarState(sped77);
	return 0;
}