/*
날짜 : 2024. 7. 21
이름 : 배성훈
내용 : 택배상자
	택배 상자를 트럭에 실어야 한다
	실어야 하는 택배상자는 크기가 모두 같으며 1번 상자부터 n번상자까지
	번호가 증가하는 순서대로 컨테이너 벨트에 일렬로 놓여 있다

	컨테이너 벨트는 한 방향으로만 진행이 가능해서 벨트에 놓인 순서대로
	상자를 내릴 수 있다

	컨테이너 벨트 위의 택배상자는 트럭에 그냥 실으면 안된다
	트럭에 실을 때에는 배달하는 순서에 따라 싣어야 한다

	만약 컨테이너 벨트의 맨 앞에 놓인 상자가 현재 트럭에 실어야 하는 순서가 아니라면
	그 상자를 트럭에 실을 순서가 될 때까지 보조 컨테이너 벨트에 보관해야한다

	보조 컨테이너 벨트는 앞 뒤로 이동이 가능하지만
	입구 외에는 다른 면이 막혀있어 맨 앞의 상자만 뺄 수 있다
	(후입선출)

	보조 컨테이너 벨트는 하나만 있고
	보조 컨테이너 벨트를 이용해도 원하는대로 상자를 싣지 못한다면
	더 이상 상자를 싣지 않는다

	상자 순서를 나타내는 정수 배열 order가 주어졌을 때,
	몇 개의 상자를 트럭에 실을 수 있는지 return 하는
	solution 함수 구현


	order의 길이 100만 이하의 자연수
	order에는 길이 이하의 모든 정수가 한 번씩만 등장한다

	order[i]는 컨테이너 벨트에 order[i]번째 상자를 i + 1번째로
	트럭에 실어야 함을 의미한다


	parameter
	{ 4, 3, 1, 2, 5 }


	return
	2


	sol
	컨테이너 벨트에는 
	1, 2, 3, 4, 5 번의 택배 상자가 있다

	맨 처음 트럭에 실어야 할 것은 4번 상자이므로
	1, 2, 3번을 보조 컨테이너 벨트에 실고
	4번 상자를 트럭에 실는다
	
	두 번째로 트럭에 실어야 할 것은 3번 상자인데
	보조 컨테이너 벨트에
	3, 2, 1 순으로 있다
	맨 앞의 3을 꺼내어 트럭에 실는다

	그리고 세 번째인 1번 상자를 실어야 하는데
	보조 컨테이너 벨트 에는
	2, 1번 상자 순으로 있고
	2번 상자를 다시 컨테이너 벨트 위에 둘 수 없다

	즉 1번상자를 꺼낼 수 없으므로 최대 2개까지만 트럭에 실을 수 있다
*/

#include <vector>

using namespace std;

int solution(vector<int> _order)
{

	int answer = 0;

	int len = _order.size();
	vector<int> stack;
	stack.reserve(len);

	int boxNum = 1;

	for (int find : _order)
	{

		while (boxNum <= find)
		{

			stack.push_back(boxNum++);
		}

		if (find != stack.back()) break;

		answer++;
		stack.pop_back();
	}

	return answer;
}